/**
 * modules/mixins
 * ---
 */


@mixin reset-box {
  padding: 0;
  margin: 0;
}

@mixin reset-box-ul {
  padding: 0;
  margin: 0;

  li{
    list-style: none;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin x-appearance ($value) {
  -webkit-appearance: $value;
     -moz-appearance: $value;
          appearance: $value;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}

@mixin backface-visibility($visibility : hidden) {
    -webkit-backface-visibility: $visibility; /* Chrome, Safari, Opera */
    backface-visibility: $visibility;
}



@mixin object-fit($fit: fill){
  -o-object-fit: $fit;
     object-fit: $fit;
     width: 100%;
     height: 100%;
 }

// eddicon mixin
@mixin icon($value){
  font-family: 'edd-hostel';
  font-size: 2rem;
  content: $value;
  display: inline-block;
}

// color by page

@mixin colors($hover : false, $parent : ''){
  @if $hover == true{
    @include transition(color .3s ease);
  }

  #{$parent} &{  
    color: darken($hostelColor, 2%);
    @if $hover == true{ &:hover{ color: lighten($hostelColor, 15%); } }
  }
  #{$parent}.blog &{  
    color: darken($blogColor, 8%);
    @if $hover == true{ &:hover{ color: lighten($blogColor, 15%); } }
  }
  #{$parent}.page-id-16 &{
    color: darken($facilitiesColor, 2%);
    @if $hover == true{ &:hover{ color: lighten($facilitiesColor, 15%); } }
  }
  #{$parent}.page-id-18 &{
    color: darken($aroundColor, 2%);
    @if $hover == true{ &:hover{ color: lighten($aroundColor, 15%); } }
  }
  #{$parent}.page-id-20 &{
    color: darken($howtoColor, 2%);
    @if $hover == true{ &:hover{ color: lighten($howtoColor, 15%); } }
  }
  #{$parent}.page-id-278 &{
    color: darken($policiesColor, 2%);
    @if $hover == true{ &:hover{ color: lighten($policiesColor, 15%); } }
  }
}

@mixin bg-colors($colorselec : false, $element : &, $hover : false){
  @if $hover == true{
    @include transition(background-color .3s ease);
  }

  @if $colorselec == false {
    &{  
      background-color: $hostelColor;
      @if $hover == true{ &:hover{ background-color: lighten($hostelColor, 15%); } }
    }
    .blog &{  
      background-color: $blogColor;
      @if $hover == true{ &:hover{ background-color: lighten($blogColor, 15%); } }
    }
    .page-id-16 &{
      background-color: $facilitiesColor;
      @if $hover == true{ &:hover{ background-color: lighten($facilitiesColor, 15%); } }
    }
    .page-id-18 &{
      background-color: $aroundColor;
      @if $hover == true{ &:hover{ background-color: lighten($aroundColor, 15%); } }
    }
    .page-id-20 &{
      background-color: $howtoColor;
      @if $hover == true{ &:hover{ background-color: lighten($howtoColor, 15%); } }
    }
    .page-id-278 &{
      background-color: $policiesColor;
      @if $hover == true{ &:hover{ background-color: lighten($policiesColor, 15%); } }
    }
  } @else {
    &{  
      background-color: $hostelColor;
      @if $hover == true{ &:hover{ background-color: lighten($hostelColor, 15%); } }
    }
    @at-root #{$colorselec}.blog #{$element}{
      background-color: $blogColor;
      @if $hover == true{ &:hover{ background-color: lighten($blogColor, 15%); } }
    }
    @at-root #{$colorselec}.page-id-16 #{$element}{
      background-color: $facilitiesColor;
      @if $hover == true{ &:hover{ background-color: lighten($facilitiesColor, 15%); } }
    }
    @at-root #{$colorselec}.page-id-18 #{$element}{
      background-color: $aroundColor;
      @if $hover == true{ &:hover{ background-color: lighten($aroundColor, 15%); } }
    }
    @at-root #{$colorselec}.page-id-20 #{$element}{
      background-color: $howtoColor;
      @if $hover == true{ &:hover{ background-color: lighten($howtoColor, 15%); } }
    }
    @at-root #{$colorselec}.page-id-278 #{$element}{
      background-color: $policiesColor;
      @if $hover == true{ &:hover{ background-color: lighten($policiesColor, 15%); } }
    }
  }
}

// Bourbon Mixin for top notch webfont support: https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_font-face.scss
@mixin font-face-bb($font-family, $file-path, $weight: normal, $style: normal, $svg-name: $font-family ) {
  @font-face {
      font-family: $font-family;
      src: url('#{$file-path}.woff');
      // src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
      //      url('#{$file-path}.woff') format('woff'),
      //      url('#{$file-path}.ttf') format('truetype'),
      //      url('#{$file-path}.svg##{$svg-name}') format('svg');
      font-weight: $weight;
      font-style: $style;
  }
}

/* background-image */
$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    background-repeat: no-repeat;
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}

/* flexbox */

// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
  	  -ms-flex: $values;
  	      flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
     -moz-box-ordinal-group: $val;     
  	     -ms-flex-order: $val;     
  	      -webkit-order: $val;  
  		      order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}
